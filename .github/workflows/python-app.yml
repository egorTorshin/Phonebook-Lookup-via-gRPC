name: Tests
'on':
- push
permissions:
  checks: write
  actions: read
  contents: read
jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Test 1
      id: test-1
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Test 1
        setup-command: ''
        command: "docker run -q -v .:/app -w /app --rm -e PYTHONDONTWRITEBYTECODE=1 python:3 bash -c 'umask 000 && pip install -qqq grpcio grpcio-tools && ./tests/1.sh'"
        timeout: 2
        max-score: 5
    - name: Test 2
      id: test-2
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Test 2
        setup-command: ''
        command: "docker run -q -v .:/app -w /app --rm -e PYTHONDONTWRITEBYTECODE=1 python:3 bash -c 'umask 000 && pip install -qqq grpcio grpcio-tools && ./tests/2.sh'"
        timeout: 2
        max-score: 5
    - name: Test 3
      id: test-3
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Test 3
        setup-command: ''
        command: "docker run -q -v .:/app -w /app --rm -e PYTHONDONTWRITEBYTECODE=1 python:3 bash -c 'umask 000 && pip install -qqq grpcio grpcio-tools && ./tests/3.sh'"
        timeout: 2
        max-score: 5
    - name: Test 4
      id: test-4
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Test 4
        setup-command: ''
        command: "docker run -q -v .:/app -w /app --rm -e PYTHONDONTWRITEBYTECODE=1 python:3 bash -c 'umask 000 && pip install -qqq grpcio grpcio-tools && ./tests/4.sh'"
        timeout: 2
        max-score: 5
    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        TEST-1_RESULTS: "${{steps.test-1.outputs.result}}"
        TEST-2_RESULTS: "${{steps.test-2.outputs.result}}"
        TEST-3_RESULTS: "${{steps.test-3.outputs.result}}"
        TEST-4_RESULTS: "${{steps.test-4.outputs.result}}"
      with:
        runners: test-1,test-2, test-3, test-4
